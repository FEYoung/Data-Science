package(swirl)
library(swirl)
swirl()
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
/matrix()
?matrix()
?matrix
matrix(1:20, 4,5)-> my_matrix2
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patirnts, my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
clas(my_data)
class(my_data)
cnames<-C("patient", "age", "weight", "bp", "rating", "test")
cnames<-C("patient","age","weight","bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
?colnames
colnames(my_data)<-cnames
my _data
my_data
TRUE==TRUE
(FALSE==TRUE)++TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!5==7
FALSE&FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 &&
| 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE)6>4)
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,clas)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flags)
head(flags_colors)
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[ ,19:23]
lappy(flag_shapes,range)
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,lenght)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
quit()
(70/95)/(15/95)
(70/95)/(15/95)->x
pnorm(x)
pnorm(-x)
x<-45/66
y<-15/66
rr<-x/y
se<-Sqrt(((1-x)/(x*66))+(1-y)/(y*66)))
se<-Sqrt(((1-x)/(x*66))+(1-y)/(y*66))
se<-sqrt(((1-x)/(x*66))+(1-y)/(y*66))
log(rr)+se
log(rr)-se
se
pbinom(3, 4, .5, lower.tail = FALSE)
pbinom(3, 4, .5)
pbinom(3, 4, .5, lower.tail = FALSE)*2
pbinom(1, 4, .5, lower.tail = FALSE)
x<-matrix(c(4,1,2,6), nrow=2, ncol=2)
x
fisher.test(dat, alternative = "greater")
fisher.test(x, alternative = "greater")
y<-matrix(c(3,2,1,4),nrow=2,ncol=2)
fisher.test(y, alternative = "greater")
dat <- matrix(c(0.53,0.35,0.12,140,100,50), 2)
chisq.test(dat)
chisq.test(dat, correct = FALSE)
dat <- matrix(c(53,35,12,140,100,50), 2)
chisq.test(dat)
chisq.test(dat, correct = FALSE)
45/200
(45/200)*100
(140/200)*100
z<-matrix(C(43,8,4, 45), nrow=2)
z
z<-matrix(C(43,8,4,45), nrow=2)
z<-matrix(c(43,8,4,45), nrow=2)
dat <- matrix(c(0.53,0.35,0.12,140,100,50), 2)
chisq.test(z, correct = FALSE)
package(swirl)
load.package(swirl)
library(swirl)
swirl()
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls(plants)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
tr(plants)
str(plants)
?sample()
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100, reaplace=TRUE)
sample(c(0,1),100, replace=TRUE)
sample(c(0,1),100, replace=TRUE, prob=c(0.3,0.7))
sample(c(0,1),100, replace=TRUE, prob=c(0.3,0.7))
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips<-sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips<-rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rbinom
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,lambda=10)
replicate(100,rpois(5,lambda=10))<-my_pois
replicate(100,rpois(5,lambda=10))->my_pois
my_pois<-replicate(100,rpois(5,lambda=10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colmeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time
t1<-Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())->t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
month(t1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")->t4
t4
clas(t4)
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plat(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
plot(cars,col =1)
plot(cars,col =2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2
)
data(mtcars)
?boxpolot
?boxpolt
?boxplot
boxplot(mpg~cyl,mtcars)
hist(mtcars$mpg)
quit
setwd("~/studie oud/EST IBW 2013-2014/MOOC/Datascience/datasciencecoursera/Cleaning/wk1")
file<-https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
download.file(file, destfile"Cummunity Survey.csv", method=curl)
file<-https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
file<-https:\\d396qusza40orc.cloudfront.net\getdata%2Fdata%2Fss06hid.csv
file<-https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
file<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv""
download.file(file, destfile"Cummunity Survey.csv", method=curl)
file<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(file, destfile"Community Survey.csv", method=curl)
download.file("file", destfile"Community Survey.csv", method=curl)
download.file(file, destfile="Community Survey.csv", method=curl)
download.file(file, destfile="Community Survey.csv", method="curl")
download.file(file, destfile="Community Survey.csv")
load.csv("Community Survey.csv")->comsur
load.table("Community Survey.csv")->comsur
read.csv("Community Survey.csv")->comsur
head(comsur)
x<-comsur$VAL>1000000
sum(x)
sum(x, na.rm=TRUE)
x
x<-comsur$VAL>=1000000
sum(x, na.rm=TRUE)
comsur$val
x<-comsur$VAL==24
sum(x, na.rm=TRUE)
file<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(file, destfile="NGAP.xlsx")
(head(file))
library(xlsx)
read.xlsx(file,SheetIndex=1, header=TRUE)->dat
read.xlsx(file,sheetIndex=1, header=TRUE)->dat
read.xlsx("NGAP.xlsx",sheetIndex=1, header=TRUE)->dat
read.xlsx("NGAP.xlsx",sheetIndex=1, header=TRUE)->dat
library(xlsx)
read.xlsx("NGAP.xlsx",sheetIndex=1, header=TRUE)->dat
install.packages(xlsx)
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
read.xlsx("NGAP.xlsx",sheetIndex=1, header=TRUE)->dat
dat <- read.xlsx ("filename", sheetIndex=1, header = TRUE, mode="wb")
dat <- read.xlsx ("NGAP.xlsx", sheetIndex=1, header = TRUE, mode="wb")
dat <- read.xlsx ("NGAP.xlsx", sheetIndex=1, header = TRUE)
download.file(file, destfile="NGAP.xlsx", mode="wb")
dat <- read.xlsx ("NGAP.xlsx", sheetIndex=1, header = TRUE)
rowindex<-18:23
colindex<-7:15
dat <- read.xlsx ("NGAP.xlsx", sheetIndex=1, header = TRUE, colIndex=colindex, rowIndex=rowindex)
sum(dat$Zip*dat$Ext,na.rm=T)
librar(xml)
library(xml)
library(XML)
file<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
x<-xmlTreeParse(file, useInternal=TRUE)
download.file(file, destfile="Restaurant.xml")
x<-xmlTreeParse("Restaurant.xml", useInternal=TRUE)
rootnode<-xmlRoot(x)
rootnode
rootnode<-xmlRoot(x)
rootnode
y<-xmlSApply(rootnode,"//zipcode",xmlValue)->zip
y<-xmlSApply(rootnode,"//zipcode",xmlValue)
y<-xmlSApply(rootnode,"\\zipcode",xmlValue)
y<-xmlSApply(rootnode,xmlValue)
y
y<-xmlSApply(rootnode,"//zipcode",xmlValue)
y<-xmlSApply(rootnode,"//zip",xmlValue)
file<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(file, destfile="AMC.csv")
install.package("data.frame")
install.packages("data.frame")
load(data.frame)
